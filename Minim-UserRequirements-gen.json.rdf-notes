<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rdf:RDF [
    <!ENTITY rdf     "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY rdfs    "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY owl     "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd     "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY xml     "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfg    "http://www.w3.org/2004/03/trix/rdfg-1/" >
    <!ENTITY ore     "http://www.openarchives.org/ore/terms/" >
    <!ENTITY ao      "http://purl.org/ao/" >
    <!ENTITY dcterms "http://purl.org/dc/terms/" >
    <!ENTITY foaf    "http://xmlns.com/foaf/0.1/" >
    <!ENTITY ro      "http://purl.org/wf4ever/ro#" >
    <!ENTITY wfprov  "http://purl.org/wf4ever/wfprov#" >
    <!ENTITY wfdesc  "http://purl.org/wf4ever/wfdesc#" >
    <!ENTITY minim   "http://purl.org/minim/minim#" >
]>

<rdf:RDF xmlns=".."
     xml:base=".."
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:rdfg="http://www.w3.org/2004/03/trix/rdfg-1/"
     xmlns:ore="http://www.openarchives.org/ore/terms/"
     xmlns:ao="http://purl.org/ao/"
     xmlns:dcterms="http://purl.org/dc/terms/"
     xmlns:foaf="http://xmlns.com/foaf/0.1/"
     xmlns:ro="http://purl.org/wf4ever/ro#"
     xmlns:wfprov="http://purl.org/wf4ever/wfprov#"
     xmlns:wfdesc="http://purl.org/wf4ever/wfdesc#"
     xmlns:minim="&minim;"
>

  <!-- Target for Minimum information requirement 
  
       Minim invokes minimum information models on for a specified purpose
       relating to a specified target.  The requirement may apply to some
       resource other than the specified target.
       
       For example, in this case, the requirement to create the 
       UserRequirements-gen.json file is that a given Minim model 
       must be satisfied by the Research Object.
    -->
  <rdf:Description rdf:about="docs/UserRequirements-gen.csv">
    <minim:hasConstraint>
      <minim:Constraint rdf:about="#create/docs/UserRequirements-gen.csv">
        <minim:forPurpose>create UserRequirements-gen.csv</minim:forPurpose> <!-- or just use rdfs:label? -->
        <minim:onResource rdf:resource="" />
        <minim:toModel rdf:resource="#runnableRequirementRO" />
      </minim:Constraint>
    </minim:hasConstraint>
  </rdf:Description>


  <!-- Requirements on RO to be runnable, to create defined outputs
    -->
  <minim:Model rdf:about="#runnableRequirementRO">
    <rdfs:label>Runnable Requirements RO</rdfs:label>
    <rdfs:comment>
      This model defines information that must be available for the requirements Research Object to be runnable.
    </rdfs:comment>

    <!-- # Environment needs lpod-show -->
    <!-- # Environment needs Python -->
    <!-- # Environment needs Dexy -->

    <minim:hasMustRequirement>
      <minim:Requirement rdf:about="#isPresent/data/UserRequirements-astro.ods">
      <!-- Inline definition follows of rule that defines above requirement.
           It could also be defined separately.
           This structure also allows OWL-based reporting structure used by MIM (see below)
           
           The particular structure here is very RO-specific.  We will also need more generic
           structures that can capture the requirement for appropriate inputs to a workflow 
           instance to be present.
           
           By adopting this rather ad hoc structure, we can use it to learn what kinds of
           minimum requirement need to be encoded; later, we may be able to define some more
           generic requirement structure to capture these.
        -->
        <minim:isDerivedBy>
          <minim:RequirementRule>
            <!-- this is very ad hoc ... can use more general approach here? -->
            <minim:aggregatePresent rdf:resource="data/UserRequirements-astro.ods" />
            <minim:derivesRequirement rdf:resource="#isPresent/data/UserRequirements-astro.ods" />
          </minim:RequirementRule>
        </minim:isDerivedBy>
      </minim:Requirement>
    </minim:hasMustRequirement>

    <!-- Same as above requirement using Matt Gamble's original report framework,
         to demonstrate compatibility of approach...
      -->
    <minim:hasMustRequirement>
      <minim:Requirement rdf:about="#isPresent/data/UserRequirements-astro.ods">
      <!-- Inline definition follows of rule that defines above requirement.
           It could also be defined separately.
        -->
        <minim:isDerivedBy>
          <mimim:RequirementRule>
            <!-- use OWL constraints applied directly to a research object or component
                 to infer the minim:reports property 
              -->
            <owl:equivalentClass>
              <owl:Restriction>
                <!-- note this has ore:aggregates as premise, but it's beyond OWL to 
                     enforce that the resource is actually present.
                  -->
                <owl:onProperty rdf:resource="&ore;aggregates" />
                <owl:hasValue rdf:resource="data/UserRequirements-astro.ods" />
              </owl:Restriction>
            </owl:equivalentClass>
            <rdfs:subClassOf>
              <owl:Restriction>
                <owl:onProperty rdf:resource="&minim;reports" />
                <owl:hasValue rdf:resource="#isPresent/data/UserRequirements-astro.ods" />
              </owl:Restriction>
            </rdfs:subClassOf>
          </mimim:RequirementRule>
        </minim:isDerivedBy>
      </minim:Requirement>
    </minim:hasMustRequirement>

    <!--
    # MUST contain 
    <... rdf:resource="data/UserRequirements-astro.ods" />
    <... rdf:resource="data/UserRequirements-bio.ods" />
    <... rdf:resource="data/UserRequirements-gen.ods" />
    <... rdf:resource="data/TechRequirements-all.ods" />
    <... rdf:resource="data/TechnicalFacets.ods" />
    <... rdf:resource="docs/.dexy" />
    <... rdf:resource="docs/reqs.css" />
    <... rdf:resource="docs/trac.css" />
    <... rdf:resource="docs/UserRequirements-all.html" />
    <... rdf:resource="docs/TechRequirements-all.html" />
    <... rdf:resource="docs/TechnicalFacets.html" />
    <... rdf:resource="docs/mkjson.sh" />
    <... rdf:resource="python/ReadCSV.py" />
    ...
      -->

  </minim:Model>

</rdf:RDF>
